#Kütüphaneleri yükleme
import numpy as np
import argparse
import cv2
import threading
import matplotlib.pyplot as plt 
cap = cv2.VideoCapture(0) 

# Kamera bağlantısını kontrol et.
if not cap.isOpened():
    print("Kamera bağlantısı başarısız!")
    exit()
 
while(True):
    # goruntu yakalama
    ret, frame = cap.read()
    # goruntuyu grilestir
    output = frame.copy()
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    # goruntuyu blurlastir
    gray = cv2.GaussianBlur(gray,(5,5),0);
    gray = cv2.medianBlur(gray,5)
    ret,th1 = cv2.threshold(frame,127,255,cv2.THRESH_BINARY)
    gray = cv2.adaptiveThreshold(gray,255,cv2.ADAPTIVE_THRESH_GAUSSIAN_C,\
            cv2.THRESH_BINARY,11,3.5)
    kernel = np.ones((5,5),np.uint8)
    gray = cv2.erode(gray,kernel,iterations = 1)
    gray = cv2.dilate(gray,kernel,iterations = 1)
    circles = cv2.HoughCircles(gray, cv2.HOUGH_GRADIENT,2, 400, param1 = 200, 
               param2 = 100, minRadius = 50, maxRadius = 0) # python$
    
    # daireyi isle
    if circles is not None:
    # x y kordinatlarini integer cevir
        circles = np.uint16(np.around(circles))
        for i in circles[0,:]:
            # draw the outer circle
            cv2.circle(frame,(i[0],i[1]),i[2],(0,255,0),2)
            # draw the center of the circle
            cv2.circle(frame,(i[0],i[1]),2,(0,0,255),3)
    if circles is not None:
    
    # x y kordinatlarini integer cevir
        circles = np.round(circles[0, :]).astype("int")
        for (x, y, r) in circles: #daireyi işaretle
        
            cv2.circle(output, (x, y), r, (0, 255, 0), 4)
            cv2.rectangle(output, (x - 5, y - 5), (x + 5, y + 5), (0, 128, 255), -1)
            print ("X kordinat: ")
            print (x)
            print ("Y Kordinat: ")
            print (y)
            print ("Radius: ")
            print(r)

    cv2.imshow("face and eyes",frame)  
    
    if cv2.waitKey(30) & 0xff == ord("q"):
        break    

cap.release()
cv2.waitKey(0)

cv2.destroyAllWindows()
